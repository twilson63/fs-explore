name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    name: Build Binaries
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platforms: "linux-amd64,linux-arm64"
            install_deps: |
              sudo apt-get update
              sudo apt-get install -y zip
          - os: macos-latest
            platforms: "darwin-amd64,darwin-arm64"
            install_deps: |
              # macOS already has zip and tar
              echo "macOS dependencies ready"
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        
    - name: Install Hype framework
      run: |
        git clone https://github.com/twilson63/hype.git /tmp/hype
        cd /tmp/hype
        go build -o hype
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          sudo cp hype /usr/local/bin/hype
          sudo chmod +x /usr/local/bin/hype
        else
          sudo cp hype /usr/local/bin/hype
          sudo chmod +x /usr/local/bin/hype
        fi
        
    - name: Install dependencies
      run: ${{ matrix.install_deps }}
        
    - name: Set version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Make build script executable
      run: chmod +x build-release.sh
        
    - name: Create release binaries
      run: |
        ./build-release.sh ${{ steps.version.outputs.VERSION }} ${{ matrix.platforms }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.os }}
        path: dist/
        retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Set version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
        
    - name: Prepare release assets
      run: |
        mkdir -p dist/
        cp artifacts/binaries-ubuntu-latest/* dist/ 2>/dev/null || true
        cp artifacts/binaries-macos-latest/* dist/ 2>/dev/null || true
        ls -la dist/
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: fs-explore ${{ steps.version.outputs.VERSION }}
        body: |
          ## fs-explore ${{ steps.version.outputs.VERSION }}
          
          Cross-platform TUI file explorer with syntax highlighting.
          
          ### Installation
          
          **Quick install (Linux/macOS):**
          ```bash
          curl -fsSL https://raw.githubusercontent.com/twilson63/fs-explore/main/install.sh | bash
          ```
          
          **Windows:**
          üöß Windows support coming soon! Use WSL with the Linux method above.
          
          **Manual install:**
          Download the appropriate binary for your platform below.
          
          ### Features
          - üìÅ Cross-platform file navigation
          - üé® Syntax highlighting for 6+ languages
          - ‚å®Ô∏è Vim-inspired keyboard shortcuts
          - üîç Binary file detection
          
          ### Supported Platforms
          - Linux (x86_64, ARM64)
          - macOS (Intel, Apple Silicon)
          - Windows (coming soon!)
          
          ### Checksums
          See `checksums.txt` for file verification.
        draft: false
        prerelease: false
        files: dist/*
